{"ast":null,"code":"var _jsxFileName = \"/Users/rtomlin62/Desktop/sugarsocietysc/client/src/main/order/index.tsx\";\nimport React from \"react\";\nimport sgMail from '@sendgrid/mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderInquiry() {\n  sgMail.setApiKey('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');\n\n  function TrySending() {\n    console.log('we are trying');\n    const msg = {\n      to: 'admin@sugarsocietysc.com',\n      from: 'admin@sugarsocietysc.com',\n      // Use the email address or domain you verified above\n      subject: 'Sending with Twilio SendGrid is Fun',\n      text: 'and easy to do anywhere, even with Node.js',\n      html: '<strong>and easy to do anywhere, even with Node.js</strong>'\n    }; //ES6\n\n    sgMail.send(msg).then(() => {}, error => {\n      console.error(error);\n\n      if (error.response) {\n        console.error(error.response.body);\n      }\n    }); //ES8\n\n    (async () => {\n      try {\n        await sgMail.send(msg);\n      } catch (error) {\n        console.error(error);\n\n        if (error.response) {\n          console.error(error.response.body);\n        }\n      }\n    })();\n\n    console.log('we tried');\n  }\n\n  const handleOnSubmit = async e => {\n    console.log('handleOnSubmit');\n    e.preventDefault();\n    const res = await fetch('/api/send', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: 'admin@sugarsocietysc.com',\n        message: 'something nice'\n      })\n    });\n    const text = await res.text();\n    console.log(res.status, text);\n    console.log('handled');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order via Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => {\n        handleOnSubmit(e);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = OrderInquiry;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderInquiry\");","map":{"version":3,"sources":["/Users/rtomlin62/Desktop/sugarsocietysc/client/src/main/order/index.tsx"],"names":["React","sgMail","OrderInquiry","setApiKey","TrySending","console","log","msg","to","from","subject","text","html","send","then","error","response","body","handleOnSubmit","e","preventDefault","res","fetch","method","headers","JSON","stringify","email","message","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,eAAe,SAASC,YAAT,GAAwB;AACvCD,EAAAA,MAAM,CAACE,SAAP,CAAiB,uEAAjB;;AAEA,WAASC,UAAT,GAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,GAAG,GAAG;AACVC,MAAAA,EAAE,EAAE,0BADM;AAEVC,MAAAA,IAAI,EAAE,0BAFI;AAEwB;AAClCC,MAAAA,OAAO,EAAE,qCAHC;AAIVC,MAAAA,IAAI,EAAE,4CAJI;AAKVC,MAAAA,IAAI,EAAE;AALI,KAAZ,CAFoB,CASpB;;AACAX,IAAAA,MAAM,CACHY,IADH,CACQN,GADR,EAEGO,IAFH,CAEQ,MAAM,CAAE,CAFhB,EAEkBC,KAAK,IAAI;AACvBV,MAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;;AAEA,UAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBX,QAAAA,OAAO,CAACU,KAAR,CAAcA,KAAK,CAACC,QAAN,CAAeC,IAA7B;AACD;AACF,KARH,EAVoB,CAmBpB;;AACA,KAAC,YAAY;AACX,UAAI;AACF,cAAMhB,MAAM,CAACY,IAAP,CAAYN,GAAZ,CAAN;AACD,OAFD,CAEE,OAAOQ,KAAP,EAAmB;AACnBV,QAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;;AAEA,YAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBX,UAAAA,OAAO,CAACU,KAAR,CAAcA,KAAK,CAACC,QAAN,CAAeC,IAA7B;AACD;AACF;AACF,KAVD;;AAWAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AAED,QAAMY,cAAc,GAAG,MAAOC,CAAP,IAAiB;AACtCd,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAa,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACnCC,MAAAA,MAAM,EAAE,KAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0B;AAKnCP,MAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAE,0BADY;AAEnBC,QAAAA,OAAO,EAAE;AAFU,OAAf;AAL6B,KAAd,CAAvB;AAUA,UAAMjB,IAAI,GAAG,MAAMU,GAAG,CAACV,IAAJ,EAAnB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACQ,MAAhB,EAAwBlB,IAAxB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAhBD;;AAkBE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,OAAO,EAAGa,CAAD,IAAO;AAACD,QAAAA,cAAc,CAACC,CAAD,CAAd;AAAkB,OAAxC;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KAvEuBjB,Y","sourcesContent":["import React from \"react\";\nimport sgMail from '@sendgrid/mail'\n\nexport default function OrderInquiry() {\nsgMail.setApiKey('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');\n\nfunction TrySending() {\n  console.log('we are trying');\n  const msg = {\n    to: 'admin@sugarsocietysc.com',\n    from: 'admin@sugarsocietysc.com', // Use the email address or domain you verified above\n    subject: 'Sending with Twilio SendGrid is Fun',\n    text: 'and easy to do anywhere, even with Node.js',\n    html: '<strong>and easy to do anywhere, even with Node.js</strong>',\n  };\n  //ES6\n  sgMail\n    .send(msg)\n    .then(() => {}, error => {\n      console.error(error);\n  \n      if (error.response) {\n        console.error(error.response.body)\n      }\n    });\n  //ES8\n  (async () => {\n    try {\n      await sgMail.send(msg);\n    } catch (error: any) {\n      console.error(error);\n  \n      if (error.response) {\n        console.error(error.response.body)\n      }\n    }\n  })();\n  console.log('we tried');\n}\n\nconst handleOnSubmit = async (e:any) => {\n  console.log('handleOnSubmit')\n  e.preventDefault()\n  const res = await fetch('/api/send', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: 'admin@sugarsocietysc.com',\n      message: 'something nice'\n    })\n  })\n  const text = await res.text()\n  console.log(res.status, text)\n  console.log('handled')\n}\n\n  return (\n    <div>\n      <h1>Order via Email</h1>\n      <div onClick={(e) => {handleOnSubmit(e)}}>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}